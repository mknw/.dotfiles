# define user environemnt variables
# such as $PATH, $EDITOR, $PAGER, $ZDOTDIR

# Keep 1000 lines of history within the shell and save it to $ZDOTDIR/zhistory
SAVEHIST=1000
HISTSIZE=1000
HISTFILE="$ZDOTDIR/zhistory"
EDITOR="vim"
# spaceship prompt vars
# SPACESHIP_VI_MODE_SHOW=false

# vim initialization
export MYVIMRC="~/.dotfiles/vim/vimrc"
export VIMINIT="source $MYVIMRC"
export ZDIR_COLORS="$HOME/.dir_colors"

# run gotop (will have to go in /usr/bin at some point)
alias gotop="~/scripts/gotop -b"
alias btmb="btm --battery"

# ssh
alias dasvu="ssh -t mao540@ssh.data.vu.nl ssh fs0.das5.cs.vu.nl"
alias das="ssh mao540@fs0.das5.cs.vu.nl"
alias dasvuy="ssh -tY mao540@ssh.data.vu.nl ssh -Y fs0.das5.cs.vu.nl"
# alias pleasetlmgr="sudo /usr/local/texlive/2019/bin/x86_64-linux/tlmgr" 
alias clvimswp='rm ~/.config/vim/swap/*'
alias tmux="tmux -f ~/.dotfiles/tmux/tmux.conf"
alias reload="exec /bin/zsh -l; echo Shell refreshed."
alias lastcmd="fc -n -1" # changing integer returns N last commands. Command allows editing before being issued.
alias man-flash="~/scripts/man-flashcard"
alias speaker="~/scripts/connectSpeaker.sh"
alias restartwifi='service network-manager restart'

alias ls="ls --color"
alias ll="ls -lG"
alias l.="ls -l -Ad .????*"
alias la="ls -la"
alias lst="echo 'Showing most recent ctime on top:\n------------------' && ls -lt -c" # 
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias mkdirp="mkdir -pv"
# alias diff='colordiff' # don't alias original commands. 
alias path='echo -e ${PATH//:/\\n}'

# controll cpu performance
alias listgovernors="cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors"
alias governor="cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor"
alias performance="echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor"
alias powersave="echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor"

alias grepc='grep --color=auto'
alias resetaudio='pulseaudio -k && sudo alsa force-reload'
alias protege='$HOME/KaD/Protege-5.5.0/run.sh'
alias topdf='libreoffice --headless --invisible --convert-to pdf'

# temporary
alias activenvtsw="source ~/.venv/tswvenv37/bin/activate"
alias mountmatlab='sudo mount /dev/sda4 ~/samssd; /home/mknw/samssd/matlab/bin/matlab -nosplash -r "cd $HOME/RoB2020/NBT_26112020/; installNBT" &'
alias restart-displaylink='sudo systemctl start displaylink-driver.service'
alias wintergame="clazer mode=game modK=ffffff letters=10E0C0 fKeys=faaf00 other=FF0052 posK=ed00ff"
alias altgame="clazer mode=game modK=ff1cca letters=c2c2c2 fKeys=ff9100 other=000000 posK=000000 numK=4dffc3"

# functions
highlight () { grep --color -E "$1|$" $2 ; }

# # python shtuff
[[ -z $PYTHONPATH ]] && export PYTHONPATH="~/.local/lib/python3.7/site-packages:$PYTHONPATH"

export VIRTUAL_ENV_DISABLE_PROMPT=1

# enable Qt Xwayland comms.
export QT_PLATFORM_PLUGIN=xcb
# #
#
# Let's add texlive to the path
typeset -U path
fpath=( "$ZDOTDIR/zfunctions" $fpath )
path=( "$HOME/.local/bin" $path )
path=( $path "$HOME/scripts/" )
path+=/usr/local/texlive/2019/bin/x86_64-linux
# export PATH # do we need this? # apparently not.

#############
# functions #
#############

grabvu () {
	# grab content from VU's servers
	if [ -z "$1" ]; then

		echo "transfer from remote, straight into ~/MAIP/results? "
		echo "yes / dry-run / no [ydN]: "
		read answer

		if [ "$answer" = "y" ]; then
			rsync -avzh --progress "mao540@ssh.data.vu.nl:~/results" ~/MAIP
			echo "done."
		elif [ "$answer" = "d" ]; then
			rsync --dry-run -avzh --progress "mao540@ssh.data.vu.nl:~/results" ~/MAIP
		else
			echo "'grabvu -h' for help."
			echo "exiting..."
		fi

	elif [ "$1" = "-h" ]; then
		echo "Usage:"
		echo "grabvu <destination directory>"

	elif [ -d "$1" ]; then

		if [ -z "$(ls -A $1)" ]; then
			rsync -azh --progress "mao540@ssh.data.vu.nl:~/results" "$1"
		else
			echo "files found in $1. risk over-write?"
			read overanswer
			if [ "$overanswer" = "y" ]; then
				echo "good"
				rsync -azhr --progress "mao540@ssh.data.vu.nl:~/results/" "$1"
			else
				exit
			fi
		fi

	elif [ ! -d "$1" ]; then
		echo -n "Directory $1 doesn't exist. Create? [yN] "
		read createanswer

		if [ "$createanswer" = "y" ]; then
			mkdir -p "$1"
			rsync -azh --progress "mao540@ssh.data.vu.nl:~/results/" "$1"
		else
			echo "exiting..."
		fi

	fi
}

# color functions
palette() {for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done}

palette_cs() {
	for i in {0..16}; do 
		# %K
		# $i iteration n
		# l:3 : n digits to show
		# 0 : digit to prepend
		# %K %k and %F %f seem to be matching
		print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f";
	done
}

subderma() {
if [ "$1" = "1" ]; then
for i in 00{2..8} {0{3,4,9},10}{0..7}
	do for j in 0 1
	   do echo -e "$j;$i \e[$j;${i}mSubdermatoglyphic text\e[00m"
	   done
	done
elif [ "$1" = "-cs" ]; then
	echo "Showing colourscheme, 16 colours"
	palette_cs
	# echo -e "$i \e[0;${i}mSubdermatoglyphic text\e[00m  \e[1;${i}mSubdermatoglyphic text\e[00m"
else
	echo "Showing 2 columns: 0 (normal) and 1 (bold)"
	for i in 00{2..8} {0{3,4,9},10}{0..7}
	do echo -e "$i \e[0;${i}mSubdermatoglyphic text\e[00m  \e[1;${i}mSubdermatoglyphic text\e[00m"
	done
fi
return 0
}

findver () {
	if [ -z "$1" ]; then
		find . -name 'version' -exec sh -c 'echo "$0: $(cat $0)"' {} \;
	else
		FP_VMARKERS=$(find . -name 'version')
		for FP in $FP_VMARKERS; do
			while IFS='' read -r line; do
				if [ "$line" = "$1" ]; then
					echo $FP
					echo "Matched: $line"
				fi
			done < "$FP"
		done
	fi
}
